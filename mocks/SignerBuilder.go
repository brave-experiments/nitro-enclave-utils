// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	signature "github.com/brave/nitriding/attestation/signature"
	mock "github.com/stretchr/testify/mock"
)

// SignerBuilder is an autogenerated mock type for the SignerBuilder type
type SignerBuilder struct {
	mock.Mock
}

// MakeSigner provides a mock function with given fields:
func (_m *SignerBuilder) MakeSigner() (signature.Signer, error) {
	ret := _m.Called()

	var r0 signature.Signer
	if rf, ok := ret.Get(0).(func() signature.Signer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(signature.Signer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSignerBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewSignerBuilder creates a new instance of SignerBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSignerBuilder(t mockConstructorTestingTNewSignerBuilder) *SignerBuilder {
	mock := &SignerBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
